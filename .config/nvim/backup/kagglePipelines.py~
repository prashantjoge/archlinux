from sklearn.model_selection import cross_val_score
from sklearn.metrics import mean_absolute_error
from sklearn.impute import SimpleImputer
from sklearn.pipeline import make_pipeline
from sklearn.ensemble import RandomForestRegressor
import pandas as pd
from sklearn.model_selection import train_test_split

# Read data
data = pd.read_csv('~/projects/datasets/melb/Melbourne_housing_FULL.csv')
cols_to_use = ['Rooms', 'Distance', 'Landsize', 'BuildingArea', 'YearBuilt']
data.dropna(axis=0, inplace=True)
X = data[cols_to_use]

y = data.Price
train_X, test_X, train_y, test_y = train_test_split(X, y)


my_pipeline = make_pipeline(SimpleImputer(), RandomForestRegressor())
# my_pipeline.fit(train_X, train_y)
# predictions = my_pipeline.predict(test_X)
# print('mean_absolute_error: ' + str(mean_absolute_error(predictions, test_y)))
scores = cross_val_score(
    my_pipeline, X, y, scoring='neg_mean_absolute_error', cv=5)
print(scores)
print('Mean Absolute Error %2f' % (-1 * scores.mean()))
