from sklearn.tree import DecisionTreeRegressor
import pandas as pd
import numpy as np
from sklearn.impute import SimpleImputer
a = 1+2
iowa_data_path = '~/projects/datasets/iowa/train.csv'
home_data = pd.read_csv(iowa_data_path)
# print(home_data.describe())
# print(home_data.head())
# print(home_data.columns)
missing_val_count_by_column = (home_data.isnull().sum())
print(missing_val_count_by_column[missing_val_count_by_column > 0])

data_without_missing_value = home_data.dropna(axis=1)
cols_with_missing = [
    col for col in home_data.columns if home_data.isnull().any()]
reduced_original_data = home_data.drop(cols_with_missing, axis=1)
my_imputer = SimpleImputer()
data_imputed_values = my_imputer.fit_transform(home_data)
print(data_imputed_values.describe())

y = home_data.SalePrice.astype(int)
y = home_data.SalePrice
feature_names = ["LotArea", "YearBuilt", "1stFlrSF",
                 "2ndFlrSF", "FullBath", "BedroomAbvGr", "TotRmsAbvGrd"]
X = home_data[feature_names]

print(X.describe())

iowa_model = DecisionTreeRegressor(random_state=0)
iowa_model.fit(X, y)
