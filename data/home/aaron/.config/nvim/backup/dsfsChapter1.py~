from __future__ import division  # integer division is lame
users = [
    {"id": 0, "name": "Hero"},
    {"id": 1, "name": "Dunn"},
    {"id": 2, "name": "Sue"},
    {"id": 3, "name": "Chi"},
    {"id": 4, "name": "Thor"},
    {"id": 5, "name": "Vlive"},
    {"id": 6, "name": "Hicks"},
    {"id": 7, "name": "Devin"},
    {"id": 8, "name": "Kate"},
    {"id": 9, "name": "Klien"},
]
friendships = [(0, 1), (0, 2), (1, 2), (1, 3), (2, 3), (3, 4),
               (4, 5), (5, 6), (5, 7), (6, 8), (7, 8), (8, 9)
               ]
for user in users:
    user["friends"] = []
for i, j in friendships:
    users[i]["friends"].append(users[j])  # add i as a friend of j
    users[j]["friends"].append(users[i])


def number_of_friends(user):
    """how many friends _user_ have?"""
    return len(user["friends"])  # 24


total_connections = sum(number_of_friends(user) for user in users)
print(total_connections)

num_users = len(users)  # length of users list
avg_connections = total_connections / num_users  # 2.4
# print(users)
# create a list (user_id,number_of_friends)
num_friends_by_id = [(user["id"], number_of_friends(user)) for user in users]
sorted(num_friends_by_id,
       key=lambda userid_numfriends: userid_numfriends[1],
       reverse=True)
print(num_friends_by_id)
