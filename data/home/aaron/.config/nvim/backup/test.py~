from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error
from sklearn.ensemble import RandomForestRegressor
import pandas as pd
import typing

# type: pd.DataFrame
data = pd.read_csv('projects/datasets/melb/Melbourne_housing_FULL.csv')
melb_target = data.Price
# print(melb_target)
melb_predictors = data.drop(['Price'], axis=1)  # type: pd.DataFrame
# print(melb_predictors)
melb_numeric_predictors = melb_predictors.select_dtypes(
    exclude=['object'])  # type: pd.DataFrame
X_train, X_test, y_train, y_test = train_test_split(melb_numeric_predictors, melb_target,
                                                    train_size=0.7, test_size=0.3, random_state=0)
# print(melb_numeric_predictors)
# print(data.describe())
# print(data.columns)
#data = data.dropna(axis=0)
#print(data.describe())
#print("Columns: " + data.columns)
# data = data.select_dtypes()
print(melb_numeric_predictors.columns)
cols_with_missing = [
    col for col in melb_numeric_predictors.columns if melb_numeric_predictors[col].isnull().any()]
print(cols_with_missing)

cols_without_missing = [
    col for col in melb_numeric_predictors.columns if melb_numeric_predictors[col].notnull().any()]
print(cols_without_missing)
