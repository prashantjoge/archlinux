
	Map-Reduce Framework
		Map input records=1473
		Map output records=0
		Input split bytes=114
		Spilled Records=0
		Failed Shuffles=0
		Merged Map outputs=0
		GC time elapsed (ms)=99
		CPU time spent (ms)=2600
		Physical memory (bytes) snapshot=236998656
		Virtual memory (bytes) snapshot=1928544256
		Total committed heap usage (bytes)=173539328
	ImportTsv
		Bad Lines=1473
	File Input Format Counters
		Bytes Read=77443
	File Output Format Counters
		Bytes Written=0


create 'traffic', {NAME=>'cf'}

hdfs dfs -copyFromLocal lesson7.csv /user/hbase/data


hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.seperator=','  -Dimporttsv.columns='HBASE_ROW_KEY,cf:type,cf:0_3NIGHT,cf:3_6NIGHT,cf:6_9DAY,cf:9_12DAY,cf:12_15DAY,cf:15_18DAY,cf:18_21NIGHT,cf:21_24NIGHT,cf:total' traffic_accidents /user/hbase/data/lesson7.csv

******************************************
Another example of import not working   **
******************************************

hdfs dfs -cat /user/hbase/data/test2.csv
2020-04-03 13:08:09,245 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-04-03 13:08:09,958 INFO sasl.SaslDataTransferClient: SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
a,b,c,d,e,f,g
9999,PRASHANT,THOMAS,9999,9/29/1999,9999,99


hbase(main):010:0> create 'test3', {NAME=>'f1', VERSIONS=>5}
Created table test3
Took 4.8842 seconds                                                                  
=> Hbase::Table - test3


Â hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.seperator=','  -Dimporttsv.columns='HBASE_ROW_KEY,f1:a,f1:b,f1:d,f1:e,c1:f' test3 /user/hbase/data/test2.csv

Results
	Total vcore-milliseconds taken by all map tasks=2895
		Total megabyte-milliseconds taken by all map tasks=2964480
	Map-Reduce Framework
		Map input records=2
		Map output records=0
		Input split bytes=112
		Spilled Records=0
		Failed Shuffles=0
		Merged Map outputs=0
		GC time elapsed (ms)=105
		CPU time spent (ms)=2350
		Physical memory (bytes) snapshot=240046080
		Virtual memory (bytes) snapshot=1939755008
		Total committed heap usage (bytes)=176685056
	ImportTsv
		Bad Lines=2
	File Input Format Counters 
		Bytes Read=58
	File Output Format Counters 
		Bytes Written=0
******************************************************************
Exercise
******************************************************************

You have to save the given data in HBase in such a way that you can solve the below queries. Please mention what you are selecting as a row key and why.
1. Get the total number of accidents when you are given

a. Year
b. Type of Accident
c. Time Duration

Answer : This tables  cites historical data, where as Hbase's best usecase is for real time processing. The table has no primary key. Hbase keeps versions of the data. The latest versions of the data replaces older versions. Hence data for the same year, even if they are categorically different will be over written. The other option would be to create a unique primary key.

2. Get the total number of accidents when you are given`

a. Year
b. Type of Accident

get 'traffic_accidents', 'cf:year'

     3. Get the total number of accidents in a given year

